00000400 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 10/13/17 7:49:05 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :                                             
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000  =00004000                  8  addr1     EQU     $4000        
00000000                             9  
00000000  =00004001                 10  addr2     EQU     $4001 
00000000                            11  
00000000  =0000A7FF                 12  data2     EQU     $A7FF 
00000000                            13  
00000000  =00005555                 14  data3     EQU     $5555 
00000000                            15  
00000000  =00000000                 16  data4     EQU     $0000 
00000000                            17  
00000000  =00001246                 18  data5     EQU     4678 
00000000                            19  
00000000  =0000004F                 20  data6     EQU     %01001111 
00000000                            21  
00000000  =00000017                 22  data7     EQU     %00010111 
00000000                            23  
00000000                            24  ***************************
00000000                            25  
00000000                            26   
00000000                            27  
00000400                            28          ORG       $400           * This pseudo op code tells the assembler  here                                                                                                                         
00000400                            29  
00000400                            30                                   * the program will run in memory
00000400                            31  
00000400  303C A7FF                 32  start    MOVE.W    #data2,D0     * Load D0 
00000404                            33  
00000404  123C 004F                 34           MOVE.B    #data6,D1     * Load D1 
00000408                            35  
00000408  143C 0017                 36           MOVE.B    #data7,D2     * load D2 
0000040C                            37  
0000040C  363C 5555                 38           MOVE.W    #data3,D3     * load D3 
00000410                            39  
00000410  307C 4000                 40           MOVEA.W   #addr1,A0     * load address register 
00000414                            41  
00000414  10C1                      42           MOVE.B    D1,(A0)+      * transfer byte to memory 
00000416                            43  
00000416  10C2                      44           MOVE.B    D2,(A0)+      * transfer second byte
00000418                            45  
00000418  327C 4000                 46           MOVEA.W   #addr1,A1     * load address 
0000041C                            47  
0000041C  C751                      48           AND.W     D3,(A1)       * Logical AND
0000041E                            49  
0000041E                            50   
0000041E                            51  
0000041E                            52  * The next instruction shows how a label is used
0000041E                            53  
0000041E                            54   
0000041E                            55  
0000041E  4EF8 0400                 56          JMP        start        * This instruction keeps the program
00000422                            57  
00000422                            58                                  * looping forever
00000422                            59  
00000422                            60          END   $400           * This pseudo op-code tells the assembler 

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDR1               4000
ADDR2               4001
DATA2               A7FF
DATA3               5555
DATA4               0
DATA5               1246
DATA6               4F
DATA7               17
START               400
